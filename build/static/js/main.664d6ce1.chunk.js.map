{"version":3,"sources":["App/components/Header/Header.js","App/pages/InfoFooter/Footer.js","App/pages/LandingPage/LandingPage.js","App/pages/ViewProfile/AttributeTable.js","App/pages/ViewProfile/AttributeList.js","App/pages/ViewProfile/GroupList.js","App/pages/ViewProfile/ViewProfile.js","App/pages/Setup/SetupProgress.js","App/pages/Setup/SetupHeader.js","App/pages/Setup/FirstStep.js","App/pages/Setup/SecondStep.js","App/pages/Setup/ThirdStep.js","App/pages/Setup/Setup.js","App/App.js","index.js"],"names":["IBMHeader","aria-label","element","Link","to","prefix","Footer","props","className","text","href","linktext","LandingPage","state","loading","session","setup","fetch","then","res","json","data","status","setState","catch","console","log","Breadcrumb","noTrailingSlash","BreadcrumbItem","this","clicked","link","Component","AttributeTable","rows","headers","DataTable","render","getHeaderProps","getRowProps","getTableProps","TableContainer","title","description","Table","TableHead","TableRow","map","header","TableHeader","TableBody","row","Fragment","key","id","cells","cell","TableCell","value","AttributeList","GroupList","format","require","selected","triggerHref","role","tabIndex","groupHeaders","TabContentRenderedOnlyWhenSelected","children","other","specificDataParse","id_counter","parsedJSON","x","attributes","push","specificGroupParse","group","ViewProfile","user","userAttrRows","groupRows","userTotalItems","userFirstRowIndex","userCurrentPageSize","groupTotalItems","groupFirstRowIndex","groupCurrentPageSize","length","assertion","result","style","width","SkeletonText","heading","name_id","Tooltip","direction","showIcon","Button","kind","onClick","window","location","replace","Tabs","Tab","label","DataTableSkeleton","columnCount","rowCount","name","slice","Pagination","totalItems","backwardText","forwardText","pageSize","pageSizes","itemsPerPageText","onChange","page","light","renderContent","class","lineCount","paragraph","CodeSnippet","type","SetupProgress","ProgressIndicator","currentIndex","step","renderLabel","triggerClassName","triggerText","tooltipId","SetupHeader","HeaderProps","FirstStep","success","loginurl","logouturl","certificate","handleChangeLoginURL","bind","handleChangeLogoutURL","handleChangeCert","preloadCheck","myHeaders","Headers","method","redirect","response","precheck","JSON","parse","code","message","error","preloadVars","preload","e","newState","target","func","TextInput","disabled","labelText","placeholder","defaultValue","onLoad","TextArea","hideLabel","helperText","SecondStep","copyEntity","copiedText","codeSnippetElement","document","querySelectorAll","innerHTML","textArea","createElement","body","appendChild","select","execCommand","remove","copyLogin","copyAcs","ariaLabel","copyButtonDescription","feedback","process","currentHost","LoadingProps","ThirdStep","params","append","urlencoded","URLSearchParams","InlineLoading","iconDescription","successDelay","Setup","showResults","progressStep","increaseStep","decreaseStep","output","evt","App","Header","exact","path","component","ReactDOM","hydrate","getElementById"],"mappings":"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","file":"static/js/main.664d6ce1.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Header,\n  HeaderName,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n} from 'carbon-components-react/lib/components/UIShell';\n\nconst IBMHeader = () => (\n  <Header aria-label=\"IBM Security Verify\">\n    <SkipToContent />\n    <HeaderName element={Link} to=\"/\" prefix=\"IBM\">\n      Security Verify\n    </HeaderName>\n  </Header>\n);\nexport default IBMHeader;\n","import React from 'react';\nimport { Link } from 'carbon-components-react'\n\nconst Footer = props => (\n  <section className={`bx--row ${props.className} info-section`}>\n    <div className=\"bx--col-md-8 bx--col-lg-8 bx--col-xlg-8\">\n      <h3 className=\"info-section__heading\">{props.text}\n        <Link\n          href=\"https://www.ibm.com/support/knowledgecenter/SSCT62/com.ibm.iamservice.doc/tasks/t_config_sso_idp.html\"\n          className=\"footer-link\"\n        >\n          {props.linktext}\n        </Link>\n      </h3>\n\n    </div>\n  </section>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  ClickableTile\n } from 'carbon-components-react';\nimport Footer from '../InfoFooter/Footer';\nimport { Settings24, Login24, UserIdentification24, Logout24 } from '@carbon/icons-react';\n\nclass LandingPage extends Component {\n  // Initialize the state\n  state = {\n    loading: true,\n    session: false,\n    setup: false\n  }\n\n  componentDidMount() {\n    fetch(`/api/v1.0/config/status`)\n    .then(res => res.json())\n    .then((data) => {\n      (data.status == true) ? \n        this.setState({setup: true}) : this.setState({setup: false})\n    })\n    .catch(console.log)\n    \n    //Use Session data\n    // fetch(`/api/v1.0/static/session`)\n    //Use static data\n    fetch(`/api/v1.0/session/active`)\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({\n        // data = {session: active} // is active\n        // data = {session: inactive} // is nnot active\n        session: (data.session == 'active') ? true : false,\n        loading: false\n       })\n    })\n    .catch(console.log)\n  }\n\n  render() {\n    return (\n      <div className=\"bx--grid landing-page\">\n        <div className=\"bx--row landing-page__banner\">\n          <div className=\"bx--col-lg-16\">\n            <Breadcrumb aria-label=\"Page navigation\" noTrailingSlash>\n              <BreadcrumbItem>\n                <a href=\"http://developer.ice.ibmcloud.com/\">Developer SDK</a>\n              </BreadcrumbItem>\n            </Breadcrumb>\n            <h1 className=\"landing-page__heading\">\n              SAML application service provider\n            </h1>\n          </div>\n        </div>\n        <div className=\"bx--row landing-page__r2\">\n            <div className=\"bx--col-md-4 bx--col-lg-7\">\n              <p className=\"landing-page__p\">\n                Use this application to test SSO with IBM Security Verify.\n                This sample app can be reused in your own applications or\n                simply used for testing purposes. Try applying access policies\n                to this application to see MFA in action, or play around with newly\n                created attributes.\n              </p>\n              <h1 className=\"landing-page__gettingstarted\">\n                Getting started\n              </h1>\n              { this.state.setup ? \n                  this.state.session && !this.state.loading ? (\n                    <>\n                      <ClickableTile className=\"landing-page_primary\" href=\"/profile\">\n                      View profile\n                      <UserIdentification24 aria-label=\"Profile\" />\n                      </ClickableTile>\n                      <ClickableTile className=\"landing-page_button1\" href=\"/logout\">\n                        Logout\n                        <Logout24 aria-label=\"Logout\" />\n                      </ClickableTile>\n                    </>\n                  ) : (\n                    <>\n                      <ClickableTile className=\"landing-page_primary\" clicked={false} href=\"/login\">\n                        Login\n                        <Login24 aria-label=\"Login\" />\n                      </ClickableTile>\n                    </>\n                  )\n                : \n                ('')\n              }\n              <ClickableTile className=\"landing-page_secondary\" clicked={false} href=\"/setup\">\n                Setup\n                <Settings24 aria-label=\"Settings\" />\n              </ClickableTile>\n            </div>\n        </div>\n        <Footer text=\"Need help?\" link=\"/\" linktext=\"Visit the knowledge center\" className=\"landing-page__r3\" />\n      </div>\n    )\n  }\n}\nexport default LandingPage;\n","import React from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n} from 'carbon-components-react';\n\n\nconst AttributeTable = ({ rows, headers }) => {\n\n  return (\n    <DataTable\n      rows={rows}\n      headers={headers}\n      render={({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getTableProps,\n      }) => (\n        <TableContainer\n          title=\"Subject\"\n          description=\"This is the subject attribute that represents the unique user.\">\n          <Table {...getTableProps()}>\n            <TableHead>\n              <TableRow className=\"tab-dataTable-row\">\n                {headers.map(header => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <React.Fragment key={row.id}>\n                  <TableRow {...getRowProps({ row })}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  );\n};\nexport default AttributeTable;\n","import React from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n} from 'carbon-components-react';\n\n\nconst AttributeList = ({ rows, headers, title, description }) => {\n\n  return (\n    <DataTable\n      rows={rows}\n      headers={headers}\n      render={({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getTableProps,\n      }) => (\n        <TableContainer\n          title=\"Attribute list\"\n          description=\"Here’s the list of attributes that we extracted from your sign on session. If you expected something different, then check your configuration on your identity provider (we can’t make those changes for you, unfortunately). \">\n          <Table {...getTableProps()}>\n            <TableHead>\n              <TableRow className=\"tab-dataTable-row\">\n                {headers.map(header => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <React.Fragment key={row.id}>\n                  <TableRow {...getRowProps({ row })}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  );\n};\nexport default AttributeList;\n","import React from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n} from 'carbon-components-react';\n\n\nconst GroupList = ({ rows, headers }) => {\n\n  return (\n    <DataTable\n      rows={rows}\n      headers={headers}\n      render={({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getTableProps,\n      }) => (\n        <TableContainer\n          title=\"Attribute list\"\n          description=\"Here’s the list of attributes that we extracted from your sign on session. If you expected something different, then check your configuration on your identity provider (we can’t make those changes for you, unfortunately). \">\n          <Table {...getTableProps()}>\n            <TableHead>\n              <TableRow className=\"tab-dataTable-row\">\n                {headers.map(header => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <React.Fragment key={row.id}>\n                  <TableRow {...getRowProps({ row })}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  );\n};\nexport default GroupList;\n","import React, { Component } from 'react';\nimport Highlight from 'highlight.js';\nimport {\n  DataTableSkeleton,\n  Breadcrumb,\n  BreadcrumbItem,\n  Tabs,\n  Tab,\n  Button,\n  SkeletonText,\n  CodeSnippet,\n  Pagination,\n  Tooltip\n} from 'carbon-components-react';\nimport AttributeTable from './AttributeTable';\nimport AttributeList from './AttributeList';\nimport GroupList from './GroupList';\nimport Footer from '../InfoFooter/Footer';\nvar format = require('xml-formatter');\n\n//props\nconst props = {\n  tabs: {\n    selected: 0,\n    triggerHref: '#',\n    role: 'navigation',\n  },\n  tab: {\n    href: '#',\n    role: 'presentation',\n    tabIndex: 0,\n  },\n};\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'value',\n    header: 'Value',\n  }\n];\nconst groupHeaders = [\n  {\n    key: 'name',\n    header: 'Group name',\n  }\n];\nconst TabContentRenderedOnlyWhenSelected = ({\n  selected,\n  children,\n  className,\n  ...other\n}) =>\n  !selected ? (\n    <div {...other} className={`bx--visually-hidden`} />\n  ) : (\n    <div\n      {...other}\n      className={`bx--tab-content`}\n      selected={selected}>\n      {children}\n    </div>\n  );\n\n//data.attributes.$var = name\n//data.attributes.$var[0] = value;\nconst getRowItems = rows =>\n  rows.map(row => ({\n    ...row,\n    id: row.id,\n    key: row.id,\n    name: row.name,\n    value: row.value\n  }));\nconst specificDataParse = data => {\n  let id_counter = 1\n  let parsedJSON = []\n  for(var x in data.attributes){\n    parsedJSON.push({'id':id_counter, 'name':x, 'value': data.attributes[x][0]})\n    id_counter++\n  }\n  //console.log(\"Parsed Attrs\", parsedJSON);\n  return parsedJSON\n}\nconst specificGroupParse = data => {\n  let id_counter = 1\n  let parsedJSON = []\n  for(var x in data.group){\n    parsedJSON.push({'id':id_counter, 'name': data.group[x]})\n    id_counter++\n  }\n  //console.log(\"Parsed Group\", parsedJSON);\n  return parsedJSON\n}\n\nclass ViewProfile extends Component {\n\n  // Initialize the state\n  state = {\n    user: [],\n    loading: true,\n    userAttrRows: [],\n    groupRows: [],\n    userTotalItems: 0,\n    userFirstRowIndex: 0,\n    userCurrentPageSize: 10,\n    groupTotalItems: 0,\n    groupFirstRowIndex: 0,\n    groupCurrentPageSize: 10\n  }\n  componentDidMount() {\n    \n    //Use Session data\n    fetch(`/api/v1.0/session/attributes`)\n    //Use static data\n    // fetch(`/api/v1.0/static/attributes`)\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({\n        user: data,\n        loading: false,\n        userAttrRows: specificDataParse(data),\n        userTotalItems: specificDataParse(data).length,\n        groupRows: specificGroupParse(data),\n        groupTotalItems: specificGroupParse(data).length,\n      })\n    })\n    .catch(console.log)\n  }\n\n\n  render() {\n    const code = (this.state.loading) ? null : this.state.user.assertion.result;\n    return (\n      <div className=\"bx--grid landing-page\">\n        <div className=\"bx--row landing-page__breadcrumb\">\n          <div className=\"bx--col-lg-16\">\n            <Breadcrumb aria-label=\"Page navigation\">\n              <BreadcrumbItem>\n                <a href=\"/\">Back to home</a>\n              </BreadcrumbItem>\n            </Breadcrumb>\n          </div>\n        </div>\n        <div className=\"bx--row landing-page__banner\">\n          <div className=\"bx--col-lg-12\">\n              { this.state.loading ? (\n                <div\n                  style={{\n                    width: '300px'\n                  }}\n                >\n                  <h1 className=\"landing-page__heading\">\n                    <SkeletonText\n                      heading\n                      width=\"100%\"\n                    />\n                  </h1>\n                </div>\n              ) : (\n                <div>\n                  <h1 className=\"landing-page__heading\">\n                    Hello {this.state.user.name_id}\n                    <Tooltip\n                      direction=\"right\"\n                      tabIndex={0}\n                      showIcon\n                    >\n                      <p>\n                        This attribute is derived from the \"NameID\" from your SAML assertion.\n                      </p>\n                    </Tooltip>\n                  </h1>\n                </div>\n              )\n            }\n          </div>\n          <div className=\"bx--col-lg-4\">\n            <Button kind=\"secondary\" className=\"button-logout\" onClick={() => window.location.replace('/logout')}>Logout</Button>\n          </div>\n        </div>\n        <div className=\"bx--row profile-content\">\n          <div className=\"bx--col\">\n            <Tabs {...props.tabs}>\n              <Tab {...props.tab} label=\"Attributes\">\n                <div className=\"profile-content-tab\">\n                  <div>\n                  { this.state.loading ? (\n                        <DataTableSkeleton\n                          columnCount={headers.length + 1}\n                          rowCount={1}\n                          headers={headers}\n                        />\n                    ) : (\n                      <AttributeTable\n                        headers={headers}\n                        rows={[{\n                          id: '1',\n                          name: 'Subject',\n                          value: this.state.user.name_id\n                        }]}\n                        />\n                    )\n                  }\n                  </div>\n                  <div>\n                  { this.state.loading ? (\n                        <DataTableSkeleton\n                          columnCount={headers.length + 1}\n                          rowCount={5}\n                          headers={headers}\n                        />\n                    ) : (\n                      <div>\n                        <AttributeList\n                        headers={headers}\n                        rows={this.state.userAttrRows.slice(\n                              this.state.userFirstRowIndex,\n                              this.state.userFirstRowIndex + this.state.userCurrentPageSize\n                            )}\n                        /><Pagination\n                          totalItems={this.state.userTotalItems}\n                          backwardText=\"Previous page\"\n                          forwardText=\"Next page\"\n                          pageSize={this.state.userCurrentPageSize}\n                          pageSizes={[5, 10, 15, 25]}\n                          itemsPerPageText=\"Items per page\"\n                          onChange={({ page, pageSize }) => {\n                            if (pageSize !== this.state.userCurrentPageSize) {\n                              this.setState({userCurrentPageSize: pageSize})\n                            }\n                            this.setState({userFirstRowIndex: pageSize * (page - 1)})\n                          }}\n                        />\n                      </div>\n                    )\n                  }\n                  </div>\n                </div>\n              </Tab>\n              <Tab {...props.tab} label=\"Groups\">\n                <div className=\"profile-content-tab\">\n                  <div>\n                  { this.state.loading ? (\n                        <DataTableSkeleton\n                          columnCount={headers.length + 1}\n                          rowCount={5}\n                          headers={groupHeaders}\n                        />\n                    ) : (\n                      <div><GroupList\n                        headers={groupHeaders}\n                        rows={this.state.groupRows}\n                        />\n                        <Pagination\n                          totalItems={this.state.groupTotalItems}\n                          backwardText=\"Previous page\"\n                          forwardText=\"Next page\"\n                          pageSize={this.state.groupCurrentPageSize}\n                          pageSizes={[5, 10, 15, 25]}\n                          itemsPerPageText=\"Items per page\"\n                          onChange={({ page, pageSize }) => {\n                            if (pageSize !== this.state.groupCurrentPageSize) {\n                              this.setState({groupCurrentPageSize: pageSize})\n                            }\n                            this.setState({groupFirstRowIndex: pageSize * (page - 1)})\n                          }}\n                        />\n                      </div>\n                    )\n                  }\n                  </div>\n                </div>\n              </Tab>\n              <Tab {...props.tab} light={true} renderContent={TabContentRenderedOnlyWhenSelected} label=\"SAML assertion\">\n                <div className=\"profile-content-tab\">\n                  <div className=\"bx--data-table-header\">\n                    <h4 className=\"bx--data-table-header__title\">SAML assertion</h4>\n                    <p class=\"bx--data-table-header__description\">View the raw assertion that was received from your Identity Provider.</p>\n                  </div>\n                  { this.state.loading ? (\n                      <div\n                        style={{\n                          width: '300px'\n                        }}\n                      >\n                        <SkeletonText\n                          lineCount={5}\n                          paragraph\n                          width=\"100%\"\n                        />\n                      </div>\n                    ) : (\n                      <div\n                        className=\"snippetBackground\"\n                      >\n                      <CodeSnippet type=\"multi\">\n                        {format(this.state.user.assertion.result)}\n                      </CodeSnippet>\n                      </div>\n                    )\n                  }\n                </div>\n              </Tab>\n            </Tabs>\n          </div>\n        </div>\n        <Footer text=\"Need help?\" link=\"/\" linktext=\"Visit the knowledge center\" className=\"landing-page__r3\" />\n      </div>\n    );\n  }\n}\nexport default ViewProfile;\n","import React from 'react';\nimport {\n  ProgressStep, ProgressIndicator, Tooltip\n} from 'carbon-components-react';\n\n\nconst SetupProgress = (props) => {\n  return (\n    <ProgressIndicator currentIndex={props.step} className=\"config-setup\">\n      <ProgressStep\n        description=\"Step 1: Set the URLs from your identity provider\"\n        label=\"Set your URLs\"\n        renderLabel={() => (\n            <Tooltip\n              direction=\"bottom\"\n              showIcon={false}\n              triggerClassName={`bx--progress-label`}\n              triggerText={'Set your URLs'}\n              tooltipId=\"tooltipId-0\">\n              <p>In this step, provide us with your Identity Provider's information.</p>\n            </Tooltip>\n          )}\n      />\n      <ProgressStep\n        description=\"Step 2: Getting started with Carbon Design System\"\n        label=\"Get our metadata\"\n        renderLabel={() => (\n            <Tooltip\n              direction=\"bottom\"\n              showIcon={false}\n              triggerClassName={`bx--progress-label`}\n              triggerText={'Get our metadata'}\n              tooltipId=\"tooltipId-1\">\n              <p>In this step, you'll get our app's SAML information which allows you to make a trust connection on your Identity Provider.</p>\n            </Tooltip>\n          )}\n      />\n      <ProgressStep\n        description=\"Step 3: Finish the configuration and save\"\n        label=\"Wrap Up\"\n        renderLabel={() => (\n            <Tooltip\n              direction=\"bottom\"\n              showIcon={false}\n              triggerClassName={`bx--progress-label`}\n              triggerText={'Wrap Up'}\n              tooltipId=\"tooltipId-2\">\n              <p>Configuration is complete, now try to log in.</p>\n            </Tooltip>\n          )}\n      />\n    </ProgressIndicator>\n  );\n};\nexport default SetupProgress;\n","import React from 'react';\n\nconst SetupHeader = (props) => {\n  return (\n    <div className=\"bx--col-lg-16\">\n      <div className=\"setup-description\">\n        <h4>{props.title}</h4>\n        <p>{props.description}</p>\n      </div>\n    </div>\n  );\n};\nexport default SetupHeader;\n","import React, { Component } from 'react';\nimport {\n  TextInput, TextArea, TextInputSkeleton\n} from 'carbon-components-react';\nimport SetupHeader from './SetupHeader'\n\nconst HeaderProps = {\n  title: `Provide your identity provider information`,\n  description: `We don't just trust anyone. To get started, all you need to provide is your\n  identity provider's login & logout URLs, and the certificate. With this we can\n  will know who to send the single-sign on request to.`\n}\n\nclass FirstStep extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        loading: true,\n        success: false,\n        loginurl: null,\n        logouturl: null,\n        certificate: null\n      };\n    // This binding is necessary to make `this` work in the callback\n    this.handleChangeLoginURL = this.handleChangeLoginURL.bind(this);\n    this.handleChangeLogoutURL = this.handleChangeLogoutURL.bind(this);\n    this.handleChangeCert = this.handleChangeCert.bind(this);\n    this.preloadCheck = this.preloadCheck.bind(this);\n  }\n  componentDidMount(){\n    var myHeaders = new Headers();\n\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n\n    fetch(`/api/v1.0/config/properties`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        var precheck = JSON.parse(result)\n        console.log(precheck)\n        if(precheck.code == '201'){\n          this.setState({\n            loading: false,\n            success: true,\n            loginurl: precheck.message.loginurl,\n            logouturl: precheck.message.logouturl,\n            certificate: precheck.message.certificate\n          })\n          this.preloadCheck(precheck.message.loginurl, precheck.message.logouturl, precheck.message.certificate)\n        }\n      })\n      .catch(error => console.log('error', error));\n  }\n  preloadCheck(loginurl, logouturl, certificate) {\n    var preloadVars = {\n      loginurl: loginurl,\n      logouturl: logouturl,\n      certificate: certificate,\n      preload: true\n    }\n    this.props.preload(preloadVars)\n  }\n  handleChangeLoginURL(e) {\n    var newState = {\n      key: 'loginurl',\n      value: e.target.value\n    }\n    this.props.func(newState)\n  }\n  handleChangeLogoutURL(e) {\n    var newState = {\n      key: 'logouturl',\n      value: e.target.value\n    }\n    this.props.func(newState)\n  }\n  handleChangeCert(e) {\n    var newState = {\n      key: 'certificate',\n      value: e.target.value\n    }\n    this.props.func(newState)\n  }\n  render() {\n    return (\n      <div className=\"bx--row setup-content\">\n        <SetupHeader\n        title={HeaderProps.title}\n        description={HeaderProps.description}\n        />\n        <div className=\"bx--col-lg-6 bx--col-md-6\">\n          <div className=\"setup-content-options\">\n            {this.state.loading ? (\n              <div>\n                <TextInputSkeleton className=\"setup-input\"/>\n                <TextInputSkeleton className=\"setup-input\"/>\n                <TextInputSkeleton className=\"setup-input\"/>\n              </div>\n            ): (\n              <div>\n                <div className=\"setup-input\">\n                  <TextInput\n                    disabled={false}\n                    id=\"login\"\n                    labelText=\"Login URL\"\n                    placeholder=\"https://youridp.../login\"\n                    defaultValue={(this.state.success ? (this.state.loginurl) : (null))}\n                    type=\"text\"\n                    onLoad={this.handleChangeLoginURL}\n                    onChange={this.handleChangeLoginURL}\n                    />\n                </div>\n                <div className=\"setup-input\">\n                  <TextInput\n                    disabled={false}\n                    id=\"logout\"\n                    labelText=\"Logout URL\"\n                    placeholder=\"https://youridp.../signout\"\n                    defaultValue={(this.state.success ? (this.state.logouturl) : (null))}\n                    type=\"text\"\n                    onChange={this.handleChangeLogoutURL}\n                    />\n                </div>\n                <div className=\"setup-input\">\n                  <TextArea\n                  disabled={false}\n                  hideLabel={false}\n                  labelText='Paste in the plain text certificate'\n                  helperText='Ensure you include the begin and end lines of the certificate'\n                  placeholder= {`-----BEGIN CERTIFICATE-----\\r\\n...\\r\\n...\\r\\n-----END CERTIFICATE-----`}\n                  defaultValue={(this.state.success ? (this.state.certificate) : (null))}\n                  id='certificate'\n                  rows={4}\n                  onChange={this.handleChangeCert}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default FirstStep;\n","import React, { Component } from 'react';\nimport {\n  CodeSnippet, Link\n} from 'carbon-components-react';\nimport SetupHeader from './SetupHeader'\nconst currentHost = process.env.REACT_APP_HOSTNAME;\nconst entityId = process.env.REACT_APP_ENTITYID;\nconst HeaderProps = {\n  title: `You have to trust us too.`,\n  description: `Copy the URLs below or download the metadata and import it to your identity provider. If you don’t complete this step, you’re going to have a bad time.`\n}\n\nclass SecondStep extends Component {\n  // IE and Edge don't support ClipBoard API\n  // execCommand Copy only allows copying from visible input fields.\n  // So we take the value in the <pre> tag, put it in a textArea, then copy from there, then remove textArea.\n  copyEntity = () => {\n  \tlet copiedText = '';\n  \tvar codeSnippetElement = document.querySelectorAll('#entity > div > code > pre');\n  \tif (codeSnippetElement) {\n  \t\tcopiedText = codeSnippetElement[0].innerHTML;\n  \t}\n  \tvar textArea = document.createElement('textarea');\n  \ttextArea.value = copiedText;\n  \tdocument.body.appendChild(textArea);\n  \ttextArea.select();\n  \tdocument.execCommand('Copy');\n  \ttextArea.remove();\n  };\n  copyLogin = () => {\n  \tlet copiedText = '';\n  \tvar codeSnippetElement = document.querySelectorAll('#copylogin > div > code > pre');\n  \tif (codeSnippetElement) {\n  \t\tcopiedText = codeSnippetElement[0].innerHTML;\n  \t}\n  \tvar textArea = document.createElement('textarea');\n  \ttextArea.value = copiedText;\n  \tdocument.body.appendChild(textArea);\n  \ttextArea.select();\n  \tdocument.execCommand('Copy');\n  \ttextArea.remove();\n  };\n  copyAcs = () => {\n  \tlet copiedText = '';\n  \tvar codeSnippetElement = document.querySelectorAll('#acs > div > code > pre');\n  \tif (codeSnippetElement) {\n  \t\tcopiedText = codeSnippetElement[0].innerHTML;\n  \t}\n  \tvar textArea = document.createElement('textarea');\n  \ttextArea.value = copiedText;\n  \tdocument.body.appendChild(textArea);\n  \ttextArea.select();\n  \tdocument.execCommand('Copy');\n  \ttextArea.remove();\n  };\n  render() {\n    return (\n      <div className=\"bx--row setup-content\">\n        <SetupHeader\n        title={HeaderProps.title}\n        description={HeaderProps.description}\n        />\n        <div className=\"bx--col-lg-6 bx--col-md-6\">\n          <div className=\"setup-content-options\">\n            <p className=\"step-label\">Entity ID</p>\n            <CodeSnippet\n              ariaLabel=\"Container label\"\n              copyButtonDescription=\"copyable code snippet\"\n              feedback=\"Copied to clipboard\"\n              type=\"single\"\n              onClick={this.copyEntity}\n              id=\"entity\"\n            >\n              {entityId || \"sample-saml-app\"}\n            </CodeSnippet>\n            <p className=\"step-label\">Assertion Consumer Service URL (ACS)</p>\n            <CodeSnippet\n              ariaLabel=\"Container label\"\n              copyButtonDescription=\"copyable code snippet\"\n              feedback=\"Copied to clipboard\"\n              type=\"single\"\n              onClick={this.copyAcs}\n              id=\"acs\"\n            >\n              {currentHost + '/assert'}\n            </CodeSnippet>\n            <p className=\"step-label\">Single Sign-On (SSO) URL</p>\n            <CodeSnippet\n              ariaLabel=\"Container label\"\n              copyButtonDescription=\"copyable code snippet\"\n              feedback=\"Copied to clipboard\"\n              type=\"single\"\n              onClick={this.copyLogin}\n              id=\"copylogin\"\n            >\n              {currentHost + '/login'}\n            </CodeSnippet>\n          </div>\n          <div className=\"step-spacing\">\n          or\n          </div>\n          <div>\n            <a href=\"/metadata.xml\" target=\"_blank\">\n              Download metadata\n            </a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n};\nexport default SecondStep;\n","import React, {Component} from 'react';\nimport {\n Button,\n InlineLoading\n} from 'carbon-components-react';\nimport SetupHeader from './SetupHeader'\n\nconst HeaderProps = {\n  title: `Setup complete`,\n  description: `Everything you provided looks good. Go ahead and try to log in. If you see errors, you can always come back here to make changes.`\n}\nconst LoadingProps = {\n  title: `Setup in progress`,\n  description: `We are setting the values you provided. It should only take a few seconds.`\n}\n\nclass ThirdStep extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n      loading: true,\n      success: false,\n      loginurl: this.props.params.loginurl,\n      logouturl: this.props.params.logouturl,\n      certificate: this.props.params.certificate,\n    }\n  }\n  componentDidMount() {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n    var urlencoded = new URLSearchParams();\n    urlencoded.append(\"loginurl\", this.state.loginurl);\n    urlencoded.append(\"logouturl\", this.state.logouturl);\n    urlencoded.append(\"certificate\", this.state.certificate);\n\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: urlencoded,\n      redirect: 'follow'\n    };\n\n    fetch(`/api/v1.0/config/properties`, requestOptions)\n      .then(response => response.text())\n      .then(result => console.log(result))\n      .then((data) => {\n        this.setState({\n          loading: false\n        })})\n      .catch(error => console.log('error', error));\n  }\n  render(){\n    return (\n      <div className=\"bx--row setup-content\">\n        { this.state.loading ? (\n          <div>\n            <SetupHeader\n            title={LoadingProps.title}\n            description={LoadingProps.description}\n            />\n            <InlineLoading\n              description=\"Setup in progress...\"\n              iconDescription=\"Setup in progress...\"\n              status=\"active\"\n              successDelay={1500}\n              className=\"setup-in-progress bx--col-lg-16\"\n            />\n          </div>\n        ) : (\n          <div>\n            <SetupHeader\n            title={HeaderProps.title}\n            description={HeaderProps.description}\n            />\n            <div className=\"bx--col-lg-6 bx--col-md-6\">\n              <div className=\"setup-content-options\">\n              <a href=\"/login\">\n              <Button kind=\"primary\" className=\"button-login\">Login now</Button>\n              </a>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n};\nexport default ThirdStep;\n","import React, { Component } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n} from 'carbon-components-react';\nimport Footer from '../InfoFooter/Footer';\nimport SetupProgress from './SetupProgress';\nimport FirstStep from './FirstStep'\nimport SecondStep from './SecondStep'\nimport ThirdStep from './ThirdStep'\n\nclass Setup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        showResults: false,\n        progressStep: 0,\n        loginurl: '',\n        logouturl: '',\n        certificate: '',\n        preload: false\n      };\n\n    // This binding is necessary to make `this` work in the callback\n    this.increaseStep = this.increaseStep.bind(this);\n    this.decreaseStep = this.decreaseStep.bind(this);\n    this.output = this.output.bind(this);\n    this.preload = this.preload.bind(this);\n  }\n  output(evt) {\n        console.log(evt)\n        var key = evt.key;\n        var value = evt.value;\n        this.setState({[key]: value})\n    }\n  preload(evt) {\n        this.setState({\n        loginurl: evt.loginurl,\n        logouturl: evt.logouturl,\n        certificate: evt.certificate,\n        preload: evt.preload})\n        console.log(evt)\n  }\n  increaseStep() {\n      this.setState(state => ({\n        progressStep: state.progressStep+1\n      }));\n  }\n  decreaseStep() {\n      this.setState(state => ({\n        progressStep: state.progressStep-1\n      }));\n  }\n\n  render() {\n    return (\n      <div className=\"bx--grid landing-page\">\n        <div className=\"bx--row landing-page__breadcrumb\">\n          <div className=\"bx--col-lg-16\">\n            <Breadcrumb aria-label=\"Page navigation\">\n              <BreadcrumbItem>\n                <a href=\"/\">Back to home</a>\n              </BreadcrumbItem>\n            </Breadcrumb>\n          </div>\n        </div>\n        <div className=\"bx--row landing-page__banner\">\n          <div className=\"bx--col-lg-12\">\n            <h1 className=\"landing-page__heading\">\n              Configuration\n            </h1>\n          </div>\n          <div className=\"bx--col-lg-4\">\n            { this.state.progressStep == 0 ? (\n              <div className=\"button-parent\">\n                {(this.state.loginurl != '' && this.state.logouturl != '' && this.state.certificate != '') ? (\n                  <Button kind=\"primary\" className=\"button-group\" onClick={this.increaseStep}>Next</Button>\n                ) : (\n                  <Button kind=\"primary\" disabled={true} className=\"button-group\">Next</Button>\n                )}\n              </div>\n            ) : [\n              (this.state.progressStep == 1 ?\n                <div className=\"button-parent\">\n                  <Button kind=\"secondary\" className=\"button-group\" onClick={this.decreaseStep}>Back</Button>\n                  <Button kind=\"primary\" className=\"button-group\" onClick={this.increaseStep}>Save</Button>\n                </div>\n               :\n               <div className=\"button-parent\">\n                  <Button kind=\"secondary\" className=\"button-group\" onClick={this.decreaseStep}>Back</Button>\n                </div>\n              )\n            ]\n            }\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--col-lg-8\">\n            <SetupProgress step={this.state.progressStep} />\n          </div>\n        </div>\n        <div>\n            { this.state.progressStep == 0 ? <FirstStep func={this.output} preload={this.preload} /> : null }\n            { this.state.progressStep == 1 ? <SecondStep /> : null }\n            { this.state.progressStep == 2 ? <ThirdStep params={this.state} /> : null }\n        </div>\n\n        <Footer text=\"Need help?\" link=\"/\" linktext=\"Visit the knowledge center\" className=\"landing-page__r3\" />\n      </div>\n    );\n  }\n}\nexport default Setup;\n","//imports\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Content } from 'carbon-components-react/lib/components/UIShell';\n//styles\nimport './app.scss';\n//Pages\nimport Header from './components/Header/Header';\nimport LandingPage from './pages/LandingPage/LandingPage';\nimport ViewProfile from './pages/ViewProfile/ViewProfile';\nimport Setup from './pages/Setup/Setup';\n//Render\nclass App extends Component {\n  render() {\n    const App = () => (\n        <Switch>\n          <Route exact path='/' component={LandingPage}/>\n          <Route path='/profile' component={ViewProfile}/>\n          <Route path='/setup' component={Setup}/>\n        </Switch>\n    )\n    return (\n      <div>\n        <Header />\n        <Content className=\"bx__global-content\">\n          <Switch>\n            <App />\n          </Switch>\n        </Content>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.scss';\nimport App from './App/App';\n\nReactDOM.hydrate((\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n), document.getElementById('root'));\n"],"sourceRoot":""}